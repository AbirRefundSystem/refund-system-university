@model RefundSystem_University.Models.RefundApplication

@{
    ViewBag.Title = "הוספת בקשה להחזר";
}

<h2>הוספה</h2>

@using (Html.BeginForm("Create", "RefundApplications", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>בקשה להחזר/זיכוי כספי</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        
        @Html.Partial("_Fields", Model)

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="הוסף" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("חזור לרשימה", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Html.Partial("_SaveScripts")
    <script src="~/Scripts/datepicker.js"></script>
    <script>
        $(function () {
            $("#EntityId").change(handleEntityChange);
            $("#FormId").change(handleFormChange);
            $("#DepartmentId").change(handleDepartmentChange);

            $(document).one("ajaxStop", function () {
                handleEntityChange();
                $("#FormId").selectpicker('val', $("#FormId").data("value"));
                handleFormChange();
                $("#DepartmentId").selectpicker('val', $("#DepartmentId").data("value"));
                handleDepartmentChange();
                $("#ProcessManagerId").selectpicker('val', $("#ProcessManagerId").data("value"));
            });

            $('input[type=radio][name=AdditionalCredit]').change(function () {
                if (this.value == true)
                    $("#Details").attr("required", "");
                else
                    $("#Details").removeAttr("required");
            });

            $("form").submit(function () {
                if ($('input[name="AdditionalCredit"]:checked').val() == "true" && !$("#Details").val()) {
                    $("#Details").parent().find("span").text("השדה פירוט הוא חובה כאשר קיים זיכוי נוסף");
                    return false;
                }
                if (parseFloat($("#TransactionAmount").val()) < parseFloat($("#RefundAmount").val())) {
                    $("#RefundAmount").parent().find("span").text("סכום העסקה חייב להיות גדול מסכום ההחזר");
                    return false;
                }
                let filesElement = document.getElementsByName("files");
                if (!filesElement.length || filesElement[0].files.length == 0) {
                    return false;
                }
            });
        });

        function handleEntityChange() {
            let value = $("#EntityId").val();
            $('#FormId option, #DepartmentId option').hide();
            $('#FormId option[data-entityid="' + value + '"], #DepartmentId option[data-entityid="' + value + '"]').show();
            $('#FormId, #DepartmentId').selectpicker('refresh');
        }

        function handleFormChange() {
            var paymentMethod = $("#FormId").find(':selected').data('paymentmethod');
            $(".for-cheque-payment-method").toggleClass("hidden", paymentMethod == @((byte)RefundSystem_University.Models.Enums.PaymentMethod.Credit));
            $(".for-credit-payment-method").toggleClass("hidden", paymentMethod == @((byte)RefundSystem_University.Models.Enums.PaymentMethod.Cheque));
        }

        function handleDepartmentChange() {
            var cssSelector = '#ProcessManagerId option';
            $(cssSelector).hide();
            cssSelector += '[data-departmentid="' + $("#DepartmentId").val() + '"]';
            $(cssSelector).show();
            $('#ProcessManagerId').selectpicker('refresh');
        }
    </script>
}
